!function(t){function e(e){for(var n,o,d=e[0],a=e[1],p=e[2],c=0,s=[];c<d.length;c++)o=d[c],Object.prototype.hasOwnProperty.call(i,o)&&i[o]&&s.push(i[o][0]),i[o]=0;for(n in a)Object.prototype.hasOwnProperty.call(a,n)&&(t[n]=a[n]);for(u&&u(e);s.length;)s.shift()();return l.push.apply(l,p||[]),r()}function r(){for(var t,e=0;e<l.length;e++){for(var r=l[e],n=!0,d=1;d<r.length;d++){var a=r[d];0!==i[a]&&(n=!1)}n&&(l.splice(e--,1),t=o(o.s=r[0]))}return t}var n={},i={2:0,16:0},l=[];function o(e){if(n[e])return n[e].exports;var r=n[e]={i:e,l:!1,exports:{}};return t[e].call(r.exports,r,r.exports,o),r.l=!0,r.exports}o.e=function(){return Promise.resolve()},o.m=t,o.c=n,o.d=function(t,e,r){o.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},o.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},o.t=function(t,e){if(1&e&&(t=o(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(o.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var n in t)o.d(r,n,function(e){return t[e]}.bind(null,n));return r},o.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return o.d(e,"a",e),e},o.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},o.p="/san-ssr/";var d=window.webpackJsonp=window.webpackJsonp||[],a=d.push.bind(d);d.push=e,d=d.slice();for(var p=0;p<d.length;p++)e(d[p]);var u=a;l.push([54,0]),r()}({15:function(t,e,r){"use strict";r.r(e),function(t){r.d(e,"default",(function(){return d}));var n,i,l,o=r(0);class d extends o.a{inited(){t.hub&&t.hub.fire&&t.hub.fire("changed",{level:0,children:[{level:2,title:"生命周期",hash:"%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F"},{level:2,title:"方法",hash:"%E6%96%B9%E6%B3%95"},{level:2,title:"属性",hash:"%E5%B1%9E%E6%80%A7"}]})}}l={},(i="components")in(n=d)?Object.defineProperty(n,i,{value:l,enumerable:!0,configurable:!0,writable:!0}):n[i]=l}.call(this,r(2))},41:function(t,e){t.exports=' <div class="content markdown-content"><div class="markdown"><h1 id="%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F%E3%80%81%E5%B1%9E%E6%80%A7%E5%8F%8A%E6%96%B9%E6%B3%95">生命周期、属性及方法</h1> <h2 id="%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F">生命周期</h2> <p>与 San-SSR 相关的生命周期为：compile、inited。</p> <p>在创建组件实例时，会执行 compile。</p> <p>在 render 过程中，会执行 inited。</p> <p>总体执行顺序：</p> <p><img src="https://user-images.githubusercontent.com/9262426/135042920-85d8b312-9d37-48e3-8e32-fc10add7707f.jpg" alt=""/></p> <h2 id="%E6%96%B9%E6%B3%95">方法</h2> <p>与 San-SSR 相关的方法目前只有 initData。</p> <p>每次 render 过程中会执行 initData 得到新的初始化数据。</p> <h2 id="%E5%B1%9E%E6%80%A7">属性</h2> <table> <thead> <tr> <th>名称</th> <th>需要的阶段</th> <th style="text-align:left">说明</th> </tr> </thead> <tbody> <tr> <td>template</td> <td>compile</td> <td style="text-align:left">组件模板</td> </tr> <tr> <td>filters</td> <td>compile、render</td> <td style="text-align:left"><a href="https://baidu.github.io/san/tutorial/component/#%E8%BF%87%E6%BB%A4%E5%99%A8" target="_blank">过滤器</a></td> </tr> <tr> <td>components</td> <td>compile</td> <td style="text-align:left">子组件</td> </tr> <tr> <td>computed</td> <td>compile、render</td> <td style="text-align:left">计算属性</td> </tr> <tr> <td>trimWhitespace</td> <td>compile</td> <td style="text-align:left">定义组件模板解析时对空白字符的 trim 模式</td> </tr> <tr> <td>delimiters</td> <td>compile</td> <td style="text-align:left">定义组件模板解析时插值的分隔符。</td> </tr> </tbody> </table> </div></div> '},54:function(t,e,r){var n=r(1),i=r(41),l=r(15).default;t.exports=r(15),t.exports.default=n(l,i,[])}});